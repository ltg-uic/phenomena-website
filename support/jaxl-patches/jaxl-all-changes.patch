diff -ru -x .gitignore ../abhinavsingh-JAXL-5829c3b/core/jaxl.class.php ../../lib/php/jaxl/core/jaxl.class.php
--- ../abhinavsingh-JAXL-5829c3b/core/jaxl.class.php	2011-05-01 07:26:24.000000000 -0500
+++ ../../lib/php/jaxl/core/jaxl.class.php	2012-04-25 03:26:36.951181221 -0500
@@ -252,7 +252,7 @@
         var $pid = false;
 
         /**
-         * Mode of the connected Jaxl instance (cgi or cli)
+         * Mode of the connected Jaxl instance (cgi, cgi-stateless, or cli)
          *
          * @var bool|string
         */
@@ -607,7 +607,7 @@
         */
         function startCore(/* $mode, $param1, $param2, ... */) {
             $argv = func_get_args();
-            $mode = $argv[0];
+            $mode = isset($argv[0]) ? $argv[0] : NULL;
 
             if($mode) {
                 switch($mode) {
@@ -625,7 +625,7 @@
                 }
             }
 
-            if($this->mode == 'cli') {
+            if($this->mode == 'cli' || $this->mode == 'cgi-stateless') {
                 try {
                     if($this->connect()) {
                         while($this->stream) {
@@ -634,10 +634,16 @@
                     }
                 }
                 catch(JAXLException $e) {
+                    if($this->mode == 'cgi-stateless') {
+                        throw $e;
+                    }
                     die($e->getMessage());
                 }
             
                 /* Exit Jaxl after end of loop */
+                if($this->mode == 'cgi-stateless') {
+                    return;
+                }
                 exit;
             }
         }
@@ -760,7 +766,7 @@
             }
            
             // check Jaxl dependency on PHP extension in cli mode
-            if($this->mode == "cli") {
+            if($this->mode == "cli" || $this->mode == "cgi-stateless") {
                 if(($this->openSSL = JAXLUtil::sslEnabled())) 
                     $this->log("[[JAXL]] OpenSSL extension is loaded.", 5);
                 else
@@ -769,7 +775,7 @@
                 if(!function_exists('fsockopen'))
                     throw new JAXLException("[[JAXL]] Requires fsockopen method");
                 
-                if(@is_writable($this->pidPath))
+                if($this->mode == "cli" && @is_writable($this->pidPath))
                     file_put_contents($this->pidPath, $this->pid);
             }
             
diff -ru -x .gitignore ../abhinavsingh-JAXL-5829c3b/core/jaxl.parser.php ../../lib/php/jaxl/core/jaxl.parser.php
--- ../abhinavsingh-JAXL-5829c3b/core/jaxl.parser.php	2011-05-01 07:26:24.000000000 -0500
+++ ../../lib/php/jaxl/core/jaxl.parser.php	2012-04-26 16:34:00.340919957 -0500
@@ -67,7 +67,8 @@
             ),
         
             'success'       =>  array(
-                'xmlns'     =>  '//success/@xmlns'
+                'xmlns'     =>  '//success/@xmlns',
+                'success'   =>  '//success/text()'
             ),
             
             'failure'       =>  array(
@@ -208,7 +209,7 @@
                 }
             }
             
-            if($sxe) $payload['xml'] = $xml;
+            if($sxe) $payload[$node]['xml'] = $xml;
             unset($xml);
             return $payload;
         }
diff -ru -x .gitignore ../abhinavsingh-JAXL-5829c3b/env/jaxl.ini ../../lib/php/jaxl/env/jaxl.ini
--- ../abhinavsingh-JAXL-5829c3b/env/jaxl.ini	2011-05-01 07:26:24.000000000 -0500
+++ ../../lib/php/jaxl/env/jaxl.ini	2012-04-12 17:53:47.075183594 -0500
@@ -50,9 +50,6 @@
      * Values specified here are overwritten by those passed with JAXL constructor
     */  
     
-    // PHP reporting level
-    error_reporting(E_ERROR | E_WARNING | E_PARSE);
-    
     // Connecting user credentials
     define('JAXL_USER_NAME', 'user');
     define('JAXL_USER_PASS', 'pass');
diff -ru -x .gitignore ../abhinavsingh-JAXL-5829c3b/xep/jaxl.0004.php ../../lib/php/jaxl/xep/jaxl.0004.php
--- ../abhinavsingh-JAXL-5829c3b/xep/jaxl.0004.php	2011-05-01 07:26:24.000000000 -0500
+++ ../../lib/php/jaxl/xep/jaxl.0004.php	2012-04-27 00:52:26.534009353 -0500
@@ -63,7 +63,7 @@
             if($inst) $payload .= '<instruction>'.$inst.'</instruction>';
             foreach($fields as $field) {
                 $payload .= '<field var="'.$field['var'].'">';
-                $payload .= '<value>'.$field['value'].'</value>';
+                $payload .= '<value>'.htmlspecialchars($field['value'], ENT_QUOTES | ENT_XML1).'</value>';
                 $payload .= '</field>';
             }
             $payload .= '</x>';
@@ -79,21 +79,27 @@
             foreach($fields as $field) {
                 $f = array();
             
-                $f['type'] = $field['@']['type'];
-                $f['label'] = $field['@']['label'];
-                $f['var'] = $field['@']['var'];
+                $f['type'] = (string)$field['type'];
+                $f['label'] = (string)$field['label'];
+                $f['var'] = (string)$field['var'];
                 
-                $f['desc'] = $field['#']['desc'][0]['#'];
-                $f['required'] = $field['#']['required'][0]['#'];
-                $f['value'] = $field['#']['value'][0]['#'];
+                $f['desc'] = (string)$field->desc;
+                $f['required'] = (string)$field->required;
+                $f['value'] = (string)$field->value;
                                 
-                if(is_array($field['#']['option'])) { 
-                    $f['option'] = array();
-                    foreach($field['#']['option'] as $option) {
-                        $f['option'][] = array('label'=>$option['@']['label'], 'value'=>$option['#']['value'][0]['#']);
-                    }
+//              if(is_array($field['#']['option'])) { 
+//                  $f['option'] = array();
+//                  foreach($field['#']['option'] as $option) {
+//                      $f['option'][] = array('label'=>$option['@']['label'], 'value'=>$option['#']['value'][0]['#']);
+//                  }
+//              }
+//TODO: Options unimplemented / unused as of yet, need to implement
+                foreach($field->option as $option)
+                {
+                    var_export($option);
+                    die("xep 0004 option encountered");
                 }
-                
+
                 $result[] = $f;
             }
             return $result;
diff -ru -x .gitignore ../abhinavsingh-JAXL-5829c3b/xep/jaxl.0133.php ../../lib/php/jaxl/xep/jaxl.0133.php
--- ../abhinavsingh-JAXL-5829c3b/xep/jaxl.0133.php	2011-05-01 07:26:24.000000000 -0500
+++ ../../lib/php/jaxl/xep/jaxl.0133.php	2012-04-26 20:40:46.843220495 -0500
@@ -61,26 +61,33 @@
         }
         
         protected static function requestForm($jaxl, $to, $from, $type) {
+            $jaxl->getSXE = true;
             $callback = array('JAXL0133', 'handleForm');
             return JAXL0050::executeCommand($jaxl, $to, $from, self::$node."#".$type, $callback);
         }
         
         public static function handleForm($payload, $jaxl) {
-            print_r($payload);
-            $id = $payload['iq']['@']['id'];
-            $domain = $payload['iq']['@']['from'];
-            $node = $payload['iq']['#']['command'][0]['@']['node'];
-            $sid = $payload['iq']['#']['command'][0]['@']['sessionid'];
-            $status = $payload['iq']['#']['command'][0]['@']['status'];
+            $jaxl->getSXE = false;
+
+            $id = $payload['id'];
+            $domain = $payload['from'];
+            $node = (string)$payload['xml']->command['node'];
+            $sid = (string)$payload['xml']->command['sessionid'];
+            $status = (string)$payload['xml']->command['status'];
 
             if($status == "completed") {
                 $callback = self::$buffer[self::$buffer[$id]]['callback'];
                 unset(self::$buffer[self::$buffer[$id]]);
                 unset(self::$buffer[$id]);
-                call_user_func($callback, $payload);
+                call_user_func($callback, $payload, $jaxl);
+            }
+            else if($status == "canceled") {
+                $callback = self::$buffer[$id]['callback'];
+                unset(self::$buffer[$id]);
+                call_user_func($callback, $payload, $jaxl);
             }
             else if($status == "executing") {
-                $fields = JAXL0004::getFormField($payload['iq']['#']['command'][0]['#']['x'][0]['#']['field']);
+                $fields = JAXL0004::getFormField($payload['xml']->command->x->field);
                 foreach($fields as $key => $field) {
                     switch($field['var']) {
                         case 'accountjids':
@@ -107,14 +114,17 @@
                     }
                 }
                 $payload = JAXL0004::setFormField($fields, false, false, 'submit');
-                self::$buffer[self::submitForm($domain, false, $payload, $node, $sid)] = $id;
+                self::$buffer[self::submitForm($jaxl, $domain, false, $payload, $node, $sid)] = $id;
             }
             else {
-                JAXLog::log("Unhandled form status type...");
+                $err = "[[JAXL0133]] Unhandled form status type ".$status;
+                $jaxl->log($err);
+                throw new JAXLException($err);
             }
         }
         
         protected static function submitForm($jaxl, $to, $from, $payload, $node, $sid) {
+            $jaxl->getSXE = true;
             $payload = '<command xmlns="http://jabber.org/protocol/commands" node="'.$node.'" sessionid="'.$sid.'">'.$payload.'</command>';
             return XMPPSend::iq($jaxl, 'set', $payload, $to, $from, array('JAXL0133', 'handleForm'));
         }
diff -ru -x .gitignore ../abhinavsingh-JAXL-5829c3b/xmpp/xmpp.auth.php ../../lib/php/jaxl/xmpp/xmpp.auth.php
--- ../abhinavsingh-JAXL-5829c3b/xmpp/xmpp.auth.php	2011-05-01 07:26:24.000000000 -0500
+++ ../../lib/php/jaxl/xmpp/xmpp.auth.php	2012-04-12 14:57:55.098352802 -0500
@@ -114,32 +114,8 @@
                 $xml .= base64_encode(JAXLUtil::implodeData($response));
             }
             else if($authType == 'SCRAM-SHA-1') {
-                $decoded = JAXLUtil::explodeData($decoded);
-                        
-                // SaltedPassword  := Hi(Normalize(password), salt, i)
-                $saltedPasswd = JAXLUtil::pbkdf2($jaxl->pass, $decoded['s'], $decoded['i']);
-                        
-                // ClientKey       := HMAC(SaltedPassword, "Client Key")
-                $clientKey = JAXLUtil::hashMD5($saltedPassword, "Client Key");
-                        
-                // StoredKey       := H(ClientKey)
-                $storedKey = sha1("Client Key");
-                        
-                // assemble client-final-message-without-proof
-                $clientFinalMessage = "c=bwis,r=".$decoded['r'];
-                        
-                // AuthMessage     := client-first-message-bare + "," + server-first-message + "," + client-final-message-without-proof
-                // ClientSignature := HMAC(StoredKey, AuthMessage)
-                
-                // ClientProof     := ClientKey XOR ClientSignature
-                // ServerKey       := HMAC(SaltedPassword, "Server Key")
-                // ServerSignature := HMAC(ServerKey, AuthMessage)
-                        
-                foreach(array('c', 'r', 'p') as $key)
-                    if(isset($decoded[$key]))
-                        $response[$key] = $decoded[$key];
-                        
-                $xml .= base64_encode(JAXLUtil::implodeData($response));
+                $response = $jaxl->scram->getResponse($jaxl->user, $jaxl->pass, $decoded);
+                $xml .= base64_encode($response);
             }
             else if($authType == 'CRAM-MD5') {
                 $xml .= base64_encode($jaxl->user.' '.hash_hmac('md5', $jaxl->pass, $arr['challenge']));
diff -ru -x .gitignore ../abhinavsingh-JAXL-5829c3b/xmpp/xmpp.class.php ../../lib/php/jaxl/xmpp/xmpp.class.php
--- ../abhinavsingh-JAXL-5829c3b/xmpp/xmpp.class.php	2011-05-01 07:26:24.000000000 -0500
+++ ../../lib/php/jaxl/xmpp/xmpp.class.php	2012-04-26 16:10:50.544224035 -0500
@@ -433,7 +433,7 @@
          * Routes incoming XMPP data to appropriate handlers
         */
         function handler($payload) {
-            if($payload == '' && $this->mode == 'cli') return '';
+            if($payload == '' && ($this->mode == 'cli' || $this->mode == 'cgi-stateless')) return '';
             if($payload != '' && $this->mode == 'cgi') $this->log("[[XMPPGet]] \n".$payload, 4);
             $payload = $this->executePlugin('jaxl_pre_handler', $payload);
            
diff -ru -x .gitignore ../abhinavsingh-JAXL-5829c3b/xmpp/xmpp.get.php ../../lib/php/jaxl/xmpp/xmpp.get.php
--- ../abhinavsingh-JAXL-5829c3b/xmpp/xmpp.get.php	2011-05-01 07:26:24.000000000 -0500
+++ ../../lib/php/jaxl/xmpp/xmpp.get.php	2012-04-12 14:59:40.572560233 -0500
@@ -145,6 +145,11 @@
         }
         
         public static function success($arr, $jaxl) {
+            if($jaxl->authType == "SCRAM-SHA-1" && !$jaxl->scram->processOutcome(base64_decode($arr['success']))) {
+                $jaxl->log("[[XMPPGet]] SCRAM-SHA-1 server verification failed");
+                self::failure($arr, $jaxl);
+                return;
+            }
             if($arr['xmlns'] == "urn:ietf:params:xml:ns:xmpp-sasl") {
                 if($jaxl->mode == "cgi") JAXL0206::restartStream($jaxl);
                 else XMPPSend::startStream($jaxl);
diff -ru -x .gitignore ../abhinavsingh-JAXL-5829c3b/xmpp/xmpp.send.php ../../lib/php/jaxl/xmpp/xmpp.send.php
--- ../abhinavsingh-JAXL-5829c3b/xmpp/xmpp.send.php	2011-05-01 07:26:24.000000000 -0500
+++ ../../lib/php/jaxl/xmpp/xmpp.send.php	2012-04-26 20:40:52.044357292 -0500
@@ -86,7 +86,10 @@
                 case 'CRAM-MD5':
                     break;
                 case 'SCRAM-SHA-1':
-                    $xml .= base64_encode("n,,n=".$jaxl->user.",r=".base64_encode(JAXLUtil::generateNonce()));
+                    // PEAR Auth_SASL2 Library
+                    require_once("Auth/SASL2/SCRAM.php");
+                    $jaxl->scram = new Auth_SASL2_SCRAM("SHA-1");
+                    $xml .= base64_encode($jaxl->scram->getResponse($jaxl->user, $jaxl->pass));
                     break;
                 default:
                     break;
